!function(e){function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}var t={};n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n,t){"use strict";function o(e){e.on("connect",()=>{console.log("Connection opened")}),e.on("reconnect",e=>{r(JSON.parse(e))}),e.on("message",e=>{r(JSON.parse(e))}),e.on("error",e=>{console.log(`Error occured: ${e}`)}),e.on("disconnect",e=>{console.log(`Connection closed: ${e}`)})}function r({type:e,data:n}){switch(e){case"INITIALIZE":c(n);break;case"UPDATE_STATE":s(n);break;default:console.log(`Undefined message type - ${e} with data - ${n}`)}}function c({state:e,settings:n,user:t}){a||((a=new LifeGame(t,n)).init(),a.send=i),a.setState(e)}function s(e){a.setState(e)}function i(e){const n=JSON.stringify({type:"ADD_POINT",data:e});l.send(n)}let a=null,l=null;App.onToken=(e=>{console.log(localStorage.getItem("lifeToken")),o(l=io(`https://localhost:8000/api?token=${e}`,{path:"/",transports:["websocket"],rejectUnauthorized:!1,secure:!0}))}),window.App.init()}]);